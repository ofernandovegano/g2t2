{
  "swagger": "2.0",
  "info": {
    "description": "Api Maisha",
    "version": "0.0.1",
    "title": "API Maisha",
    "contact": {
      "email": "ariele_apm@outlook.com"
    }
  },
  "host": "https://g2t2.herokuapp.com/",
  "schemes": ["http", "https"],
  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Retorna os usuários da base",
        "description": "",
        "operationId": "getUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Users"
              }
            }
          },
          "400": {
            "description": "Usuário não autenticado"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Você deve passar o login, email, password, user_profile e specialist_id (caso exista) no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserBody"
            }
          }
        ],
        "summary": "Cadastra um usuário na base",
        "description": "",
        "operationId": "addUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Usuário cadastrado com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CreateNewUser"
              }
            }
          },
          "400":{
            "description": "Especialista inválido, tente novamente"
          },
          "409": {
            "description": "Usuário já cadastrado"
          }
        }
      }
    },
    "users/{id}": {
      "put": {
        "tags": ["Users"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Usuário a ser atualizado"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Os dados para serem atualizados devem ser passados no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "summary": "Atualiza o usuário",
        "description": "",
        "operationId": "updateUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Dados atualizados com sucesso!"
          },
          "400": {
            "description": "Algo deu errado ao tentar cadastrar o usuário"
          },
          "401":{
            "description": "Usuário ou senha errado(a)."
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Usuário a ser deletado",
            "required": true
          }
        ],
        "summary": "Deleta um usuário",
        "description": "",
        "operationId": "deleteClients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            
          },
          "400": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": ["Clientes"],
        "summary": "Retorna os clientes cadastrados",
        "description": "Você deve estar autenticado para usar esta rota",
        "operationId": "getClients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Sucesso na operação",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Clients"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Os dados cadastrais devem ser passados no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNewClient"
            }
          }
        ],
        "summary": "Cadastra um usuário na base",
        "description": "",
        "operationId": "addClients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Cliente cadastrado com sucesso"
          },
          "400": {
            "description": "Algo deu errado ao tentar cadastrar cliente"
          }
        }
      }
    },
    "clients/{id}": {
      "put": {
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "do usuario a ser atualizado"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Os dados para serem atualizados devem ser passados no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNewClient"
            }
          }
        ],
        "summary": "Atualiza clientes existentes",
        "description": "",
        "operationId": "updateClients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar cadastrar cliente"
          }
        }
      },
      "delete": {
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "do cliente a ser deletado",
            "required": true
          }
        ],
        "summary": "Deleta um usuario",
        "description": "",
        "operationId": "deleteClients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar deletar cliente"
          }
        }
      }
    },
     "/specialist": {
      "get": {
        "tags": ["Especialistas"],
        "summary": "Retorna os especialistas, sua especialidade cadastrada e seu endereço cadastrado.",
        "description": "Você deve estar autenticado para usar esta rota",
        "operationId": "getClients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Sucesso na operação",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Specialist"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Especialistas"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Os dados cadastrais devem ser passados no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpecialistBody"
            }
          }
        ],
        "summary": "Cadastra o especialista na base",
        "description": "",
        "operationId": "addClients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Usuário cadastrado com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Specialist"
              }
            }
          },
          "400":{
            "description": "Algo deu errado ao tentar cadastrar especialista"
          },
          "409": {
            "description": "Usuário já cadastrado"
          }
        }
      }
    },
    "specialist/{id}": {
      "get": {
        "tags": ["Especialistas"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Profissão do especialista"
          }
        ],
        "summary": "Retorna os especialistas de acordo com a profissão",
        "description": "",
        "operationId": "listByProfession",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Especialistas com a profissão informada.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Specialist"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Especialistas"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "especialista a ser atualizado"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Os dados para serem atualizados devem ser passados no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpecialistBody"
            }
          }
        ],
        "summary": "Atualiza o especialista",
        "description": "",
        "operationId": "updateClients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar cadastrar p Especialista"
          }
        }
      },
      "delete": {
        "tags": ["Especialistas"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Especialista a ser deletado",
            "required": true
          }
        ],
        "summary": "Deleta um especialista",
        "description": "",
        "operationId": "deleteClients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar deletar especialista"
          }
        }
      }
    },
    
    "/sessions": {
      "post": {
        "tags": ["Login"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Você deve passar o email e password no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginBody"
            }
          }
        ],
        "summary": "Realiza o login da aplicação",
        "description": "",
        "operationId": "login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Login"
              }
            }
          },
          "401": {
            "description": "Usuário não autorizado"
          }
        }
      }
    },
    "/medical-records-history": {
      "get": {
        "tags": ["Medical Record History"],
        "summary": "Retorna o histórico de atendimentos",
        "description": "Você deve estar autenticado para usar esta rota",
        "operationId": "getMedicalRecordHistory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Sucesso na operação",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MedicalRecordHistory"
              }
            }
          },
          "400":{
            "description": "Algo deu errado na operação"
          }
        }
      },
      "post": {
        "tags": ["Medical Record History"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Você deve passar o history_date, history_time, description, medical_record_id, specialist_id, no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalRecordHistoryBody"
            }
          }
        ],
        "summary": "Cria um novo Medical Record",
        "description": "",
        "operationId": "createMedicalRecordHistory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MedicalRecordHistoryBody"
              }
            }
          },
          "401": {
            "description": "Usuário não autorizado"
          }
        }
      }
    },
    "/medical-records-history/{id}":{
      "put":{
        "tags": ["Medical Record History"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Medical record history a ser atualizado"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Os dados para serem atualizados devem ser passados no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalRecordHistoryBody"
            }
          }
        ],
        "summary": "Atualiza o medical record history",
        "description": "",
        "operationId": "updateMedicalRecordHistory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar atualizar o Medical Record History"
          }
        }
      },
      "delete":{
        "tags": ["Medical Record History"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Medical Record History a ser deletado",
            "required": true
          }
        ],
        "summary": "Deleta um Medical Record History",
        "description": "",
        "operationId": "deleteMedicalRecordHistory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar deletar um Medical Record History"
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": ["Services"],
        "summary": "Retorna os services",
        "description": "Você deve estar autenticado para usar esta rota",
        "operationId": "getServices",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Sucesso na operação",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Service"
              }
            }
          },
          "400":{
            "description": "Algo deu errado na operação"
          }
        }
      },
      "post": {
        "tags": ["Services"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Você deve passar o date_schedule, date_service, time_service, price, status_service, client_id, specialist_id,, no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceBody"
            }
          }
        ],
        "summary": "Cria um novo Service",
        "description": "",
        "operationId": "createService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceBody"
              }
            }
          },
          "401": {
            "description": "Usuário não autorizado"
          }
        }
      }
    },
    "/services/{id}":{
      "put":{
        "tags": ["Services"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Service a ser atualizado"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Os dados para serem atualizados devem ser passados no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceBody"
            }
          }
        ],
        "summary": "Atualiza um service",
        "description": "",
        "operationId": "updateService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar atualizar o Medical Record History"
          }
        }
      },
      "delete":{
        "tags": ["Services"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Service a ser deletado",
            "required": true
          }
        ],
        "summary": "Deleta um Service",
        "description": "",
        "operationId": "deleteService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar deletar um Medical Record History"
          }
        }
      }
    },
    "/services/{id}/{status}":{
      "get": {
        "tags": ["Services"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "especialista desejado "
          },
          {
            "in": "header",
            "name": "status",
            "description": "status do atendimento"
          }
        ],
        "summary": "Retorna os atendimentos de um especialista de acordo com o status",
        "description": "",
        "operationId": "getSpecialistStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar buscar os atendimentos do especialista"
          }
        }
      }
    },
    "/address": {
      "get": {
        "tags": ["Address"],
        "summary": "Retorna os endereços",
        "description": "Você deve estar autenticado para usar esta rota",
        "operationId": "getAddress",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Sucesso na operação",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              }
            }
          },
          "400":{
            "description": "Algo deu errado na operação"
          }
        }
      },
      "post": {
        "tags": ["Address"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Você deve passar o zipcode, street,street_number, city, district, federative_unit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressBody"
            }
          }
        ],
        "summary": "Cria um novo endereço",
        "description": "",
        "operationId": "createAddress",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              }
            }
          },
          "401": {
            "description": "Usuário não autorizado"
          }
        }
      }
    },
    "/address/{id}":{
      "put":{
        "tags": ["Address"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Endereço a ser atualizado"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Os dados para serem atualizados devem ser passados no body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressBody"
            }
          }
        ],
        "summary": "Atualiza um endereço",
        "description": "",
        "operationId": "updateAddress",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar atualizar o endereço"
          }
        }
      },
      "delete":{
        "tags": ["Address"],
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "Endereço a ser deletado",
            "required": true
          }
        ],
        "summary": "Deleta um endereço",
        "description": "",
        "operationId": "deleteAddress",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Algo deu errado ao tentar deletar um endereço"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "required": ["id","login","name", "password_hash", "user_profile", "createdAt", "updatedAt", "specialist_id"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "uuid"
        },
        "login":{
          "type":"string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "user_profile": {
          "type": "string",
          "enum": ["Especialista", "Recepcionista"]
        },
        "createdAt":{
          "type":"string"
        }, 
        "updatedAt":{
          "type":"string"
        },
        "specialist_id":{
          "type": "integer"
        }
      },
      "xml": {
        "name": "Usuario"
      }
    },
    "Clients": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "cpf": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "type_blood": {
          "type": "string",
          "enum": ["A-",
            "B+",
            "B-",
            "O+",
            "O-",
            "AB+",
            "AB-"]
        },
        "address_id":{
          "type": "integer"
        },
        "address": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "zipcode":{
              "type":"string"
            },
            "street": {
              "type": "string"
            },
            "street_number": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "federative_unit":{
              "type": "string"
            }
          }
        }
      },
      "xml": {
        "name": "Clients"
      }
    },
    "CreateClient": {
      "type": "object",
      "properties": {
        "cpf": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "type_blood": {
          "type": "string"
        },
        "address_id":{
          "type":"integer"
        },
        "address": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "numberOf": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            }
          }
        }
      },
      "xml": {
        "name": "Clients"
      }
    },
    "CreateNewClient": {
      "type": "object",
      "properties": {
        "cpf": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "type_blood": {
          "type": "string"
        },
        "address_id":{
          "type":"integer"
        }
      },
      "xml": {
        "name": "Clients"
      }
    },
    "Login": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "user_profile": {
              "type": "string"
            },
            "specialist_id":{
              "type":"integer"
            }
          }
        },
        "token": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Usuario"
      }
    },
    "LoginBody": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Usuario"
      }
    },
    "CreateUser": {
      "type": "object",
      "required": ["login", "name", "oldPassword", "newPassword"],
      "properties": {
        "login": {
          "type": "string"
        },
        "name":{
          "type": "string"
        }, 
        "oldPassword":{
          "type": "string"
        }, 
        "newPassword":{
          "type": "string"
        }, 
        "user_profile":{
          "type": "string"
        }
      },
      "xml": {
        "name": "Usuario"
      }
    },
    "CreateNewUser":{
      "type": "object",
      "required": ["login"],
      "properties": {
        "login": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Usuario"
      }
    },
    "CreateUserBody": {
      "type": "object",
      "required": ["login","email", "password", "user_profile"],
      "properties": {
        "login":{
          "type":"string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "user_profile":{
          "type":"string",
          "enum": ["Especialista", "Recepcionista"]
        },
        "specialist_id":{
          "type": "integer"
        }
      },
      "xml": {
        "name": "Usuario"
      }
    },
    "Specialist": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "register": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address_id": {
          "type": "integer"
        },
        "profession_id": {
          "type": "integer"
        },
        "profession": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "address": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "zipcode": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "street_number": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "federative_unit": {
              "type": "string"
            }
          }
        }
      },
      "xml": {
        "name": "Specialist"
      }
    },
    "SpecialistBody": {
      "type": "object",
      "properties": {
        "register": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "profession_id": {
          "type": "integer"
        },
        "address_id": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "SpecialistBody"
      }
    },
    "MedicalRecordHistory": {
      "type": "object",
      "properties": {
        "history_date": {
          "type": "string"
        },
        "history_time": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "medical_record_id": {
          "type": "integer"
        },
        "specialist_id": {
          "type": "integer"
        },
        "medical_record": {
          "type": "object",
          "properties":{
            "id": {
              "type": "integer"
            },
            "date_opening": {
              "type": "string"
            },
            "client_id": {
              "type": "integer"
            },
            "client": {
              "type": "object",
              "properties":{
                "id": {
                  "type": "integer"
                },
                "cpf": {
                  "type": "string"
                },
                "name": {
                  "type": "integer"
                },
                "phone": {
                  "type": "integer"
                },
                "mobile": {
                  "type": "string"
                },
                "email": {
                  "type": "integer"
                },
                "type_blood": {
                  "type": "string"
                },
                "address_id":{
                  "type": "string"
                }
              }
            }
          }
        },
        "specialist": {
          "type":"object",
          "properties":{
            "id": {
              "type": "integer"
            },
            "register": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "address_id": {
              "type": "integer"
            },
            "profession_id": {
              "type": "integer"
            }
          }
        }
      },
      "xml": {
        "name": "MedicalRecordHistoryBody"
      }
    },
    "MedicalRecordHistoryBody": {
      "type": "object",
      "properties": {
        "history_date": {
          "type": "string"
        },
        "history_time": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "medical_record_id": {
          "type": "integer"
        },
        "specialist_id": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "MedicalRecordHistoryBody"
      }
    },
    "Service": {
      "type": "object",
      "properties": {
        "date_schedule": {
          "type": "string"
        },
        "date_service": {
          "type": "string"
        },
        "time_service": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "status_service": {
          "type": "integer"
        },
        "client_id":{
          "type": "integer"
        },
        "specialist_id":{
          "type": "integer"
        },
        "client": {
          "type": "object",
          "properties":{
            "id": {
              "type": "integer"
            },
            "cpf": {
              "type": "string"
            },
            "name": {
              "type": "integer"
            },
            "phone": {
              "type": "integer"
            },
            "mobile": {
              "type": "string"
            },
            "email": {
              "type": "integer"
            },
            "type_blood": {
              "type": "string"
            },
            "address_id":{
              "type": "string"
            }
          }  
        },
        "specialist": {
          "type":"object",
          "properties":{
            "id": {
              "type": "integer"
            },
            "register": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "address_id": {
              "type": "integer"
            },
            "profession_id": {
              "type": "integer"
            }
          }
        }
      },
      "xml": {
        "name": "Service"
      }
    },
    "ServiceBody": {
      "type": "object",
      "properties": {
        "date_schedule": {
          "type": "string"
        },
        "date_service": {
          "type": "string"
        },
        "time_service": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "status_service": {
          "type": "integer"
        },
        "client_id":{
          "type": "integer"
        },
        "specialist_id":{
          "type": "integer"
        }
      },
      "xml": {
        "name": "Service"
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "zipcode": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "street_number": {
          "type": "integer"
        },
        "city": {
          "type": "integer"
        },
        "district":{
          "type": "integer"
        },
        "federative_unit":{
          "type": "integer"
        }
      },
      "xml": {
        "name": "Address"
      }
    },
    "AddressBody": {
      "type": "object",
      "properties": {
        "zipcode": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "street_number": {
          "type": "integer"
        },
        "city": {
          "type": "integer"
        },
        "district":{
          "type": "integer"
        },
        "federative_unit":{
          "type": "integer"
        }
      },
      "xml": {
        "name": "Address"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}